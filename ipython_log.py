'''http://pandas.pydata.org/pandas-docs/stable/10min.html'''

# IPython log file

## __シリーズの定義__________________________
s=pd.Series([1,3,5,np.nan,6,8])
s
#[Out]# 0    1.0
#[Out]# 1    3.0
#[Out]# 2    5.0
#[Out]# 3    NaN
#[Out]# 4    6.0
#[Out]# 5    8.0
#[Out]# dtype: float64




## __データフレームの定義1__________________________
dates=pd.date_range('20130101',periods=6)
dates
#[Out]# DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
#[Out]#                '2013-01-05', '2013-01-06'],
#[Out]#               dtype='datetime64[ns]', freq='D')

df=pd.DataFrame(np.random.randn(6,4),index=dates,columns=list('ABCD'))   #DataFrame(値, index=行ラベル, columns=列ラベル)
df
#[Out]#                    A         B         C         D
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507
#[Out]# 2013-01-05  1.509391 -1.724313  0.596728 -0.321770
#[Out]# 2013-01-06  0.460574 -0.426306  1.121471  0.353451







## __データフレームの定義2__________________________

df2=pd.DataFrame({ 'A' : 1.,
                     'B' : pd.Timestamp('20130102'),
                     'C' : pd.Series(1,index=list(range(4)),dtype='float32'),
                     'D' : np.array([3] * 4,dtype='int32'),
                     'E' : pd.Categorical(["test","train","test","train"]),
                     'F' : 'foo' })

df2
#[Out]#      A          B    C  D      E    F
#[Out]# 0  1.0 2013-01-02  1.0  3   test  foo
#[Out]# 1  1.0 2013-01-02  1.0  3  train  foo
#[Out]# 2  1.0 2013-01-02  1.0  3   test  foo
#[Out]# 3  1.0 2013-01-02  1.0  3  train  foo

df2.dtypes   #型式確認
#[Out]# A           float64
#[Out]# B    datetime64[ns]
#[Out]# C           float32
#[Out]# D             int32
#[Out]# E          category
#[Out]# F            object
#[Out]# dtype: object








## __データの確認__________________________

df.head()   #上から5行
#[Out]#                    A         B         C         D
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507
#[Out]# 2013-01-05  1.509391 -1.724313  0.596728 -0.321770

df.tail(3)   #下から<引数>行
#[Out]#                    A         B         C         D
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507
#[Out]# 2013-01-05  1.509391 -1.724313  0.596728 -0.321770
#[Out]# 2013-01-06  0.460574 -0.426306  1.121471  0.353451

df.index   #行ラベル確認
#[Out]# DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
#[Out]#                '2013-01-05', '2013-01-06'],
#[Out]#               dtype='datetime64[ns]', freq='D')

df.columns   #列ラベル確認
#[Out]# Index(['A', 'B', 'C', 'D'], dtype='object')

df.values   #値確認(np.arrayとして)
#[Out]# array([[ 1.18781641, -0.28903487, -0.64652662,  0.79479762],
#[Out]#        [ 2.87281408,  2.17960449, -0.31974559,  1.30397402],
#[Out]#        [-0.51776279, -0.25701241, -2.13484737,  0.94897612],
#[Out]#        [-0.4884579 ,  0.89387431,  0.4476564 , -1.12050654],
#[Out]#        [ 1.50939105, -1.72431265,  0.59672767, -0.32177025],
#[Out]#        [ 0.460574  , -0.42630641,  1.12147054,  0.35345143]])

df.describe()   # 列ごとの簡単な統計
#[Out]#               A         B         C         D
#[Out]# count  6.000000  6.000000  6.000000  6.000000
#[Out]# mean   0.837396  0.062802 -0.155877  0.326487
#[Out]# std    1.300280  1.328955  1.161568  0.903000
#[Out]# min   -0.517763 -1.724313 -2.134847 -1.120507
#[Out]# 25%   -0.251200 -0.391989 -0.564831 -0.152965
#[Out]# 50%    0.824195 -0.273024  0.063955  0.574125
#[Out]# 75%    1.428997  0.606153  0.559460  0.910431
#[Out]# max    2.872814  2.179604  1.121471  1.303974

df.T   #転置行列化
#[Out]#    2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06
#[Out]# A    1.187816    2.872814   -0.517763   -0.488458    1.509391    0.460574
#[Out]# B   -0.289035    2.179604   -0.257012    0.893874   -1.724313   -0.426306
#[Out]# C   -0.646527   -0.319746   -2.134847    0.447656    0.596728    1.121471
#[Out]# D    0.794798    1.303974    0.948976   -1.120507   -0.321770    0.353451






## __ソート__________________________

df.sort_values(by='B')
#[Out]#                    A         B         C         D
#[Out]# 2013-01-05  1.509391 -1.724313  0.596728 -0.321770
#[Out]# 2013-01-06  0.460574 -0.426306  1.121471  0.353451
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
df.sort_values(by='B',ascending=True)
#[Out]#                    A         B         C         D
#[Out]# 2013-01-05  1.509391 -1.724313  0.596728 -0.321770
#[Out]# 2013-01-06  0.460574 -0.426306  1.121471  0.353451
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974




## __データの選択__________________________

### __データの取得__________________________
df['A']
#[Out]# 2013-01-01    1.187816
#[Out]# 2013-01-02    2.872814
#[Out]# 2013-01-03   -0.517763
#[Out]# 2013-01-04   -0.488458
#[Out]# 2013-01-05    1.509391
#[Out]# 2013-01-06    0.460574
#[Out]# Freq: D, Name: A, dtype: float64
# dfのA列の表示
df[0:3]
#[Out]#                    A         B         C         D
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
# dfのインデックスの0-2要素目までを表示
df['20130102':'20130104']
#[Out]#                    A         B         C         D
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
#[Out]# 2013-01-04 -0.488458  0.893874  0.447656 -1.120507









### __ラベルによる選択__________________________

df.loc[dates[0]]
#[Out]# A    1.187816
#[Out]# B   -0.289035
#[Out]# C   -0.646527
#[Out]# D    0.794798
#[Out]# Name: 2013-01-01 00:00:00, dtype: float64

df[:'20130101']   #とは微妙に違う
#[Out]#                    A         B         C         D
#[Out]# 2013-01-01  1.187816 -0.289035 -0.646527  0.794798

df.loc[:,['A','B']]   # 全行、列はA,Bに限る　の意味
#[Out]#                    A         B
#[Out]# 2013-01-01  1.187816 -0.289035
#[Out]# 2013-01-02  2.872814  2.179604
#[Out]# 2013-01-03 -0.517763 -0.257012
#[Out]# 2013-01-04 -0.488458  0.893874
#[Out]# 2013-01-05  1.509391 -1.724313
#[Out]# 2013-01-06  0.460574 -0.426306

df.loc['20130102':'20130104',['A','B']]
#[Out]#                    A         B
#[Out]# 2013-01-02  2.872814  2.179604
#[Out]# 2013-01-03 -0.517763 -0.257012
#[Out]# 2013-01-04 -0.488458  0.893874

df.loc['20130102',['A','B']]
#[Out]# A    2.872814
#[Out]# B    2.179604
#[Out]# Name: 2013-01-02 00:00:00, dtype: float64

df.loc[dates[0],'A']
#[Out]# 1.187816410560768

df.at[dates[0],'A']   # ほぼ同じ方法
#[Out]# 1.187816410560768






### __ポジションによる選択__________________________

df.iloc[3]
#[Out]# A   -0.488458
#[Out]# B    0.893874
#[Out]# C    0.447656
#[Out]# D   -1.120507
#[Out]# Name: 2013-01-04 00:00:00, dtype: float64
df.loc[3]
df.loc[2:3]
# ilocはポジションから値を取得できる
df.iloc[3:5,0:2]
#[Out]#                    A         B
#[Out]# 2013-01-04 -0.488458  0.893874
#[Out]# 2013-01-05  1.509391 -1.724313
df.iloc[[1,2,4][0,2]]
df.iloc[[1:2:4][0:2]]
get_ipython().magic('pinfo df.iloc')
df.iloc[[1,2,4],[0,2]]
#[Out]#                    A         C
#[Out]# 2013-01-02  2.872814 -0.319746
#[Out]# 2013-01-03 -0.517763 -2.134847
#[Out]# 2013-01-05  1.509391  0.596728
# index 1,2,4行、columns0,2行目を取得
df.iloc[1:3,:]
#[Out]#                    A         B         C         D
#[Out]# 2013-01-02  2.872814  2.179604 -0.319746  1.303974
#[Out]# 2013-01-03 -0.517763 -0.257012 -2.134847  0.948976
# index1-3(1,2)行目と、列全部
df.iloc[:,1:3]
#[Out]#                    B         C
#[Out]# 2013-01-01 -0.289035 -0.646527
#[Out]# 2013-01-02  2.179604 -0.319746
#[Out]# 2013-01-03 -0.257012 -2.134847
#[Out]# 2013-01-04  0.893874  0.447656
#[Out]# 2013-01-05 -1.724313  0.596728
#[Out]# 2013-01-06 -0.426306  1.121471
# 行全部、列1-3(1,2)行目
df.iloc[1,1]
#[Out]# 2.1796044938308823
df.iat[1,1]
#[Out]# 2.1796044938308823







## __真偽値インデックシング__________________________
